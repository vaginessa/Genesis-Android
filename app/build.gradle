apply plugin: 'com.android.application'
apply from: 'variables.gradle'

apply plugin: 'maven'
apply plugin: 'io.fabric'

ext {
    geckoviewChannel = project.ext.firefox_channel
    geckoviewVersion = project.ext.firefox_version
}

repositories {
    maven {
        url "https://maven.mozilla.org/maven2/"
        maven { url 'https://maven.fabric.io/public' }
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
    }
}


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId project.ext.applicationId
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 11 // This versionCode is "frozen" for local builds. For "release" builds we
        // override this with a generated versionCode at build time.
        versionName "8.0.24"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
    }

    lintOptions {
        lintConfig file("lint.xml")
    }

    // We have a three dimensional build configuration:
    // BUILD TYPE (debug, release) X PRODUCT FLAVOR (focus, klar) X ARCHITECTURE (x86, arm, aarch64)

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        nightly {
            initWith release
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    flavorDimensions "abi"

    productFlavors {
        arm {
            dimension "abi"
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }
        }
        aarch64 {
            dimension "abi"
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }
        }
        x86 {
            dimension "abi"
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }
        }
    }

    sourceSets {
        test {
            resources {
                // Make the default asset folder available as test resource folder. Robolectric seems
                // to fail to read assets for our setup. With this we can just read the files directly
                // and do not need to rely on Robolectric.
                srcDir "${projectDir}/src/main/assets/"
            }
        }

    }
}


dependencies {

    /*Default Libraries*/
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'com.google.android.material:material:1.2.0-alpha02'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    /*Firefox ABI Splits*/
    implementation "org.mozilla.components:browser-engine-gecko-nightly:$mozilla_components_version"
    implementation "org.mozilla.geckoview:geckoview-nightly:$gecko_nightly_version"

    /*Alert Dialog*/
    implementation 'com.crowdfire.cfalertdialog:cfalertdialog:1.1.0'

    /*Ads Manager*/
    implementation 'com.google.android.gms:play-services-ads-lite:18.3.0'

    /*Crashlytics*/
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    /*View Animator*/
    implementation 'com.daimajia.easing:library:2.1@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'

    /*Orbot Service*/
    implementation project(path: ':orbotservice')

}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
